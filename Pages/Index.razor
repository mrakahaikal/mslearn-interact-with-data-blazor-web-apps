@page "/"
@using BlazingPizza.Model;
@using BlazingPizza.Services;
@using BlazingPizza.Shared;
@inject HttpClient HttpClient;
@inject OrderState OrderState;
@inject NavigationManager NavigationManager;

<div class="main">
    <h1>Blazing Pizzas</h1>
    <ul class="pizza-cards">
        @if(specials != null) {
            @foreach(var special in specials) {
            <li @onclick="@(() => OrderState.ShowConfigurePizzaDialog(special))" style="background-image: url('@special.ImageUrl')">
                <div class="pizza-info">
                    <span class="title">@special.Name</span>
                        @special.Description
                    <span class="price">@special.GetFormattedBasePrice()</span>
                </div>
            </li>
            }
        }
    </ul>		
</div>

@if (OrderState.ShowingConfigureDialog)
{
    <ConfigurePizzaDialog 
    Pizza="OrderState.ConfiguringPizza"
    OnCancel="OrderState.CancelConfigurePizzaDialog"
    OnConfirm="OrderState.ConfirmConfigurePizzaDialog" />
}

<div class="sidebar">
    @if (order.Pizzas.Any())
    {
    <div class="order-contents">
        <h2>Your order</h2>
        @foreach (var configuredPizza in order.Pizzas)
        {   
            <div class="cart-item">
                <div class="title">@(configuredPizza.Size)" @configuredPizza.Special.Name</div>
                <div class="item-price">
                    @configuredPizza.GetFormattedBasePrice()
                </div>
            </div>
        }
    </div>
    }

    
</div>

@code {
    List<PizzaSpecial> specials = new();

    protected override async Task OnInitializedAsync()
    {
        specials = await HttpClient.GetFromJsonAsync<List<PizzaSpecial>>(NavigationManager.BaseUri + "specials");
    }
}